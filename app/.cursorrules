flutter
- cupertino widgets, no material

documentation
- docs/ directory
- includes documentation on how the app is structured

colors
- lib/theme
- defined as const that can be globally imported

routing
- gorouter
- lib/routes/router
- this is where we provide state management

modals
- lib/widgets/modals/dismissible_modal_popup.dart
- showCupertinoDialog or showCupertinoModalPopup
- state is provided around the modal directly
- kept next to relevant screen as 'name_modal.dart'

services
- lib/services
- any package or external service that needs to be called should be defined as a service

state
- docs/state.md
- provider
- lib/state
- favor provider over local state management
- this is where we call services, we never call services from widgets directly
- state is defined under routes or modals and therefore typically scoped
- use local state management only for self-contained widgets (animations, hiding widgets, etc...)

screens
- lib/screens
- folder structure follows routing structure
- modals live next to their respective screen, move modals up if they are shared

widgets
- lib/widgets
- anything that doesn't use provider

models
- lib/models
- models related specifically to services should live with the service
- models intended for the app, should be kept in the models folder
- docs/models.md - comprehensive documentation of all app models

db
- docs/db.md
- a service lib/services/db
- abstract class for db lib/services/db/db.dart
- abstract class for a db table lib/services/db/db.dart
- we instantiate the db and include the tables inside lib/services/db/app/db.dart
- we import and use table individually
